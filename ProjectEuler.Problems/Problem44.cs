using System;

namespace ProjectEuler.Problems
{
    public class Problem44 : ProblemBase
    {
        public override string Title => "Pentagon numbers";

        public override string Description => @"
Pentagonal numbers are generated by the formula, Pn=n(3n−1)/2. The first ten pentagonal numbers are:

1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...

It can be seen that P4 + P7 = 22 + 70 = 92 = P8. However, their difference, 70 − 22 = 48, is not pentagonal.

Find the pair of pentagonal numbers, Pj and Pk, for which their sum and difference are pentagonal and D = |Pk − Pj| is minimised; what is the value of D?
            ";

        public override string GetAnswer()
        {
            long bestD = int.MaxValue;

            // The limit is pretty abitrary, couldn't see an easy way to find one.
            const int limit = 5000;

            for (int kn = 1; kn < limit; ++kn)
            {
                long k = GetPentagonalNumber(kn);

                if (GetPentagonalNumber(kn + 1) - k >= bestD)
                {
                    break;
                }

                for (int jn = kn + 1; jn < limit; ++jn)
                {
                    long j = GetPentagonalNumber(jn);

                    if (j - k >= bestD)
                    {
                        break;
                    }

                    if (!IsPentagonalNumber(j + k) || !IsPentagonalNumber(j - k))
                    {
                        continue;
                    }

                    bestD = j - k;
                    break;
                }
            }

            return bestD.ToString();
        }

        private static long GetPentagonalNumber(int n)
        {
            long pentagon = n * (3L * n - 1) / 2;
            return pentagon;
        }

        private static bool IsPentagonalNumber(long number)
        {
            double n = (Math.Sqrt(24 * number + 1) + 1) / 6;
            return Math.Abs(n % 1) < 0.000000001d;
        }
    }
}